{"version":3,"sources":["delete.svg","edit.svg","components/Menu/Menu.js","components/ListItem/ListItem.js","components/List/List.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","to","ListItem","item","id","handleDelete","handleEdit","useState","isCompleted","setIsCompleted","textClassName","isEditing","setIsEditing","value","setValue","type","defaultValue","onChange","event","target","onClick","checked","htmlFor","src","ImgEdit","alt","ImgDelete","toDo","List","array","setArray","removeItem","newArray","filter","element","updateItem","newText","map","Login","history","useHistory","login","setLogin","password","setPassword","name","setName","surname","setSurname","placeholder","preventDefault","push","registerData","console","log","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,8OCgB5BC,MAXf,WACI,OACI,yBAAKC,UAAU,QAAf,YAEE,kBAAC,IAAD,CAAMC,GAAG,UACN,4BAAQD,UAAU,UAAlB,Y,+DCqDEE,MAzDf,YAAwD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,aAAaC,EAAa,EAAbA,WAAa,EACbC,oBAAS,GADI,mBAC5CC,EAD4C,KAC/BC,EAD+B,KAE/CC,EAAgB,GAEhBF,IACAE,EAAgB,iBAGpB,IARmD,EAcjBH,oBAAS,GAdQ,mBAc5CI,EAd4C,KAcjCC,EAdiC,OAe5BL,mBAAS,IAfmB,mBAe5CM,EAf4C,KAetCC,EAfsC,KA+BnD,OACI,yBAAKd,UAAU,YAEVW,EACG,oCACI,2BAAOI,KAAK,OAAOC,aAAcb,EAAMH,UAAU,OAAOiB,SAT/C,SAACC,GACtBJ,EAASI,EAAMC,OAAON,UASV,2BAAOE,KAAK,SAASF,MAAM,OAAOO,QAjB1B,WACpBR,GAAa,GACD,KAARC,GACAP,EAAWF,EAAGS,OAkBV,oCACI,6BACI,2BAAOE,KAAK,WAAWf,UAAU,WAAWiB,SAnC5C,SAACC,GACjBT,EAAeS,EAAMC,OAAOE,UAkCuDjB,GAAID,IACvE,2BAAOH,UAAWU,EAAeY,QAASnB,GAAOA,IAErD,6BACI,yBAAKoB,IAAKC,IAASxB,UAAU,UAAUyB,IAAI,GAAGL,QA9BvC,WACvBR,GAAa,MA8BG,yBAAKW,IAAKG,IAAW1B,UAAU,YAAYyB,IAAI,GAAGL,QArClD,WAChBf,EAAaD,UCdfuB,EAAO,CACT,CACIA,KAAM,MACNvB,GAAI,KAGR,CACIuB,KAAM,OACNvB,GAAI,KAER,CACIuB,KAAM,eACNvB,GAAI,KAER,CACIuB,KAAM,UACNvB,GAAI,KAER,CACIuB,KAAM,QACNvB,GAAI,KAER,CACIuB,KAAM,MACNvB,GAAI,MAsDGwB,MAhDf,WAAiB,IAAD,EACcrB,mBAAS,IADvB,mBACLM,EADK,KACEC,EADF,OAEcP,mBAASoB,GAFvB,mBAELE,EAFK,KAEEC,EAFF,KAUNC,EAAa,SAAC3B,GAChB,IAAM4B,EAAWH,EAAMI,QAAO,SAACC,GAC3B,OAAOA,EAAQ9B,KAAOA,KAE1B0B,EAASE,IAEPG,EAAa,SAAC/B,EAAIgC,GACpB,IAAMJ,EAAWH,EAAMQ,KAAI,SAACH,GAIxB,OAHIA,EAAQ9B,KAAOA,IACf8B,EAAQP,KAAOS,GAEZF,KAEXJ,EAASE,IAEb,OACI,yBAAKhC,UAAU,QAGP6B,EAAMQ,KAAI,SAACH,GACP,OACI,kBAAC,EAAD,CAAU/B,KAAM+B,EAAQP,KAAMvB,GAAI8B,EAAQ9B,GAAIC,aAAc0B,EAAYzB,WAAY6B,OAKhG,yBAAKnC,UAAU,SACX,2BAAOe,KAAK,OAAOf,UAAU,OAAOa,MAAOA,EAAOI,SAlCzC,SAACC,GAClBJ,EAASI,EAAMC,OAAON,UAkCd,2BAAOE,KAAK,SAASf,UAAU,SAASa,MAAM,MAAMO,QAhC3C,WACjBU,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACF,KAAMd,EAAOT,GAAIS,MACtCC,EAAS,U,aCKFwB,MA1Cf,WACI,IAAMC,EAAQC,cADD,EAEajC,mBAAS,IAFtB,mBAENkC,EAFM,KAECC,EAFD,OAGmBnC,mBAAS,IAH5B,mBAGNoC,EAHM,KAGIC,EAHJ,OAIWrC,mBAAS,IAJpB,mBAINsC,EAJM,KAIAC,EAJA,OAKiBvC,mBAAS,IAL1B,mBAKNwC,EALM,KAKGC,EALH,KA0Bb,OACI,yBAAKhD,UAAU,SACX,0BAAMA,UAAU,QACZ,2BAAOe,KAAK,OAAOf,UAAU,WAAWiD,YAAY,QAAQJ,KAAK,QAAQ5B,SAtB3D,SAACC,GACvBwB,EAASxB,EAAMC,OAAON,UAsBd,2BAAOE,KAAK,WAAWf,UAAU,WAAWiD,YAAY,WAAWJ,KAAK,WACjE5B,SArBU,SAACC,GAC1B0B,EAAY1B,EAAMC,OAAON,UAqBjB,2BAAOE,KAAK,OAAOf,UAAU,WAAWiD,YAAY,OAAOJ,KAAK,OAAO5B,SAnB1D,SAACC,GACtB4B,EAAQ5B,EAAMC,OAAON,UAmBb,2BAAOE,KAAK,OAAOf,UAAU,WAAWiD,YAAY,UAAUJ,KAAK,UAC5D5B,SAlBS,SAACC,GACzB8B,EAAW9B,EAAMC,OAAON,UAkBZ,2BAAOE,KAAK,SAASF,MAAM,WAAWO,QAhB1B,SAACF,GACzBA,EAAMgC,iBACNX,EAAQY,KAAK,KACb,IAAMC,EAAe,CAACX,QAAOE,WAAUE,OAAME,WAC7CM,QAAQC,IAAIF,SCJLG,MAlBf,WACI,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWnB,IAChC,kBAAC,IAAD,CAAOkB,KAAK,IAAIC,UAAW,kBACvB,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,cCHRC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b1e67099.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.39b6b69a.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.c4a18e05.svg\";","import React from \"react\";\r\nimport \"./Menu.css\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction Menu() {\r\n    return(\r\n        <div className=\"menu\">\r\n            ToDo List\r\n          <Link to=\"/login\">\r\n             <button className='button'>Login</button>\r\n          </Link>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Menu;","import React, {useState} from \"react\";\r\nimport \"./ListItem.css\"\r\nimport ImgDelete from \"../../delete.svg\";\r\nimport ImgEdit from \"../../edit.svg\"\r\n\r\n\r\nfunction ListItem({item, id, handleDelete,handleEdit}) {\r\n    const [isCompleted, setIsCompleted] = useState(false);\r\n    let textClassName = '';\r\n\r\n    if (isCompleted) {\r\n        textClassName = 'text--crossed';\r\n    }\r\n\r\n    const handleCheck = (event) => {\r\n        setIsCompleted(event.target.checked);\r\n    };\r\n    const handleClick = () => {\r\n        handleDelete(id);\r\n    }\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [value,setValue]=useState('');\r\n\r\n    const handleEditingClick = () => {\r\n        setIsEditing(true);\r\n    }\r\n    const handleSaveClick = () => {\r\n        setIsEditing(false)\r\n        if (value!==\"\"){\r\n            handleEdit(id,value)\r\n        }\r\n    }\r\n\r\n    const handleEditChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n    }\r\n    return (\r\n        <div className=\"listItem\">\r\n\r\n            {isEditing ? (\r\n                <>\r\n                    <input type=\"text\" defaultValue={item} className=\"edit\" onChange={handleEditChange}/>\r\n                    <input type=\"button\" value='Save' onClick={handleSaveClick}/>\r\n                </>\r\n\r\n            ) : (\r\n                <>\r\n                    <div>\r\n                        <input type=\"checkbox\" className='checkbox' onChange={handleCheck} id={item}/>\r\n                        <label className={textClassName} htmlFor={item}>{item}</label>\r\n                    </div>\r\n                    <div>\r\n                        <img src={ImgEdit} className=\"imgEdit\" alt=\"\" onClick={handleEditingClick}/>\r\n                        <img src={ImgDelete} className=\"imgDelete\" alt=\"\" onClick={handleClick}/>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ListItem;","import React, {useState} from \"react\";\r\nimport './List.css';\r\nimport ListItem from \"../ListItem/ListItem\";\r\n\r\nconst toDo = [\r\n    {\r\n        toDo: \"Eat\",\r\n        id: \"1\"\r\n\r\n    },\r\n    {\r\n        toDo: \"Code\",\r\n        id: \"2\"\r\n    },\r\n    {\r\n        toDo: \"Drink Coffee\",\r\n        id: \"3\"\r\n    },\r\n    {\r\n        toDo: \"Repeate\",\r\n        id: \"4\"\r\n    },\r\n    {\r\n        toDo: \"Sleep\",\r\n        id: \"5\"\r\n    },\r\n    {\r\n        toDo: \"Run\",\r\n        id: \"6\"\r\n    }\r\n\r\n];\r\n\r\n\r\nfunction List() {\r\n    const [value, setValue] = useState(\"\");\r\n    const [array, setArray] = useState(toDo);\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    const handleCreate = () => {\r\n        setArray([...array, {toDo: value, id: value}]);\r\n        setValue('');\r\n    };\r\n    const removeItem = (id) => {\r\n        const newArray = array.filter((element) => {\r\n            return element.id !== id;\r\n        })\r\n        setArray(newArray);\r\n    }\r\n    const updateItem = (id, newText) => {\r\n        const newArray = array.map((element) => {\r\n            if (element.id === id) {\r\n                element.toDo = newText;\r\n            }\r\n            return element;\r\n        })\r\n        setArray(newArray);\r\n    }\r\n    return (\r\n        <div className=\"list\">\r\n\r\n            {\r\n                array.map((element) => {\r\n                    return (\r\n                        <ListItem item={element.toDo} id={element.id} handleDelete={removeItem} handleEdit={updateItem}/>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <div className=\"input\">\r\n                <input type='text' className='text' value={value} onChange={handleChange}/>\r\n                <input type=\"button\" className=\"button\" value=\"Add\" onClick={handleCreate}/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default List;\r\n","import React, {useState} from \"react\";\r\nimport \"./Login.css\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Login() {\r\n    const history=useHistory();\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n\r\n    const handleChangeLogin = (event) => {\r\n        setLogin(event.target.value)\r\n    }\r\n    const handleChangePassword = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n    const handleChangeName = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n    const handleChangeSurname = (event) => {\r\n        setSurname(event.target.value)\r\n    }\r\n    const handleClickRegister = (event) => {\r\n        event.preventDefault();\r\n        history.push(\"/\");\r\n        const registerData = {login, password, name, surname};\r\n        console.log(registerData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <form className='form'>\r\n                <input type=\"text\" className='formItem' placeholder='Login' name=\"login\" onChange={handleChangeLogin}/>\r\n                <input type=\"password\" className='formItem' placeholder=\"Password\" name=\"password\"\r\n                       onChange={handleChangePassword}/>\r\n                <input type=\"text\" className='formItem' placeholder=\"Name\" name=\"name\" onChange={handleChangeName}/>\r\n                <input type=\"text\" className='formItem' placeholder=\"Surname\" name=\"surname\"\r\n                       onChange={handleChangeSurname}/>\r\n                    <input type=\"submit\" value=\"Register\" onClick={handleClickRegister}/>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport Menu from \"./components/Menu/Menu\";\nimport List from \"./components/List/List\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Login from \"./components/Login/Login\";\n\nfunction App() {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/\" component={() => (\n                        <>\n                            <Menu/>\n                            <List/>\n                        </>\n                    )}/>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}